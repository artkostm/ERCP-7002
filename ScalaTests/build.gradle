apply plugin: 'scala'
apply plugin: 'eclipse'

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala']
        }
    }
    test {
        scala {
            srcDirs = ['src/test/scala']
        }
    }
}

repositories {
    mavenCentral()
    maven {
         url "http://repo.akka.io/snapshots/"
    }
}

dependencies {
    compile 'org.scala-lang:scala-library:2.11.1'
    compile 'com.typesafe.akka:akka-cluster_2.11:2.4.+'
    compile 'com.typesafe.akka:akka-http-experimental_2.11:2.4.2'
    compile 'com.typesafe.akka:akka-http-core-experimental_2.11:2.4.2'
    compile 'io.spray:spray-can_2.11:1.3.3'
    compile 'io.spray:spray-http_2.11:1.3.3'
    compile 'io.spray:spray-routing_2.11:1.3.3'
    compile 'com.typesafe.akka:akka-cluster-sharding_2.11:2.4.+'
    compile 'com.typesafe.akka:akka-cluster-tools_2.11:2.4.+'
    compile 'com.typesafe.akka:akka-cluster-metrics_2.11:2.4.+'
    compile 'com.typesafe.akka:akka-cluster_2.11:2.4.+'
    compile 'com.typesafe.akka:akka-contrib_2.11:2.4.+'
    compile 'com.typesafe.akka:akka-kernel_2.11:2.4.+'
}


/*uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri("${buildDir}/repo"))

            addFilter("main") { artifact, file -> artifact.name == project.name }
            ["api", "impl"].each { type ->
                addFilter(type) { artifact, file -> artifact.name.endsWith("-$type") }
                
                // We now have to map our configurations to the correct maven scope for each pom
                ["compile", "runtime"].each { scope ->
                    configuration = configurations[type + scope.capitalize()]
                    ["main", type].each { pomName ->
                        pom(pomName).scopeMappings.addMapping 1, configuration, scope
                    }
                }
            }

        }
    }
}*/
